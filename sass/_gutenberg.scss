// Gutenberg styles
// Images
#full-width-page-wrapper {
  .alignfull {
    width: 100vw;
    max-width: 100vw;
    position: relative;
    left: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
  }
}

// Separators
.wp-block-separator:not(.is-style-wide):not(.is-style-dots) {
  max-width: 100px;
}
.wp-block-separator {
  border: none;
  border-bottom: 2px solid rgba(0,0,0,.2);
  margin: 1.65em auto;
  &.is-style-wide {
    border-bottom-width: 1px;
  }
}

// Block cover inner text width
.wp-block-cover-image .wp-block-cover-image-text, 
.wp-block-cover-image .wp-block-cover-text, 
.wp-block-cover-image h2, 
.wp-block-cover-image h3,
.wp-block-cover-image h4,
.wp-block-cover-image h5,
.wp-block-cover-image h6,
.wp-block-cover .wp-block-cover-image-text, 
.wp-block-cover .wp-block-cover-text, 
.wp-block-cover h2,
.wp-block-cover h3,
.wp-block-cover h4,
.wp-block-cover h5,
.wp-block-cover h6 {
  max-width: 100%;
}

// Calender widget
.wp-block-calendar tbody td, .wp-block-calendar th {
  padding: 8px;
}

// Pull quote cite color
.wp-block-pullquote cite {
  color: #555;
}

// Gutenberg color options
// -- see editor-color-palette in inc/Conversions.php
$colors: (
  'primary' : #007BFF,
  'secondary' : #6c757d,
  'success' : #019875,
  'danger' : #dc3545,
  'warning' : #ffc107,
  'info' : #17a2b8,
  'light' : #f8f9fa,
  'dark' : #151B26,
);

@each $name, $color in $colors {

  .has-#{$name}-color {
    color: $color;
  }

  .has-#{$name}-background-color {
    background-color: $color;
  }
}

// Button block
.wp-block-button {
  // universal button styles
  .wp-block-button__link {
    border-radius: .25rem;
    &:hover {
      text-decoration: none;
    }
    @extend .btn;
  }

  // button styles if none defined
  .wp-block-button__link {
    &:not(.has-background) {
      @extend .btn-primary;
    }
    // Get user defined colors
    @each $name, $color in $colors {
      &.has-#{$name}-background-color {
        @extend .btn-#{$name};
      }   
    }
  }
  
  &.is-style-c-default {
    .wp-block-button__link {
      &:not(.has-background) {
        @extend .btn-primary;
      }
      // Get user defined colors
      @each $name, $color in $colors {
        &.has-#{$name}-background-color {
          @extend .btn-#{$name};
        }   
      }
    }
  }

  &.is-style-c-full-width {
    .wp-block-button__link {
      @extend .btn-block;
      &:not(.has-background) {
        @extend .btn-primary;
      }
      // Get user defined colors
      @each $name, $color in $colors {
        &.has-#{$name}-background-color {
          @extend .btn-#{$name};
        }
      }
    }
  }

}